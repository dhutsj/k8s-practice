kubectl set image deployment/nginx-deployment nginx=dhutsj/nginx:v4 â€“record
kubectl rollout history deployment nginx-deployment
kubectl rollout undo deployment/nginx-deployment --to-revision=1
kubectl scale deployment nginx-deployment --replicas=3
kubectl logs -f argocd-server-74bf76596b-mn9s8 -n argocd
export KUBECONFIG=$KUBECONFIG:config-demo:config-demo-2
kubectl get nodes --kubeconfig=$HOME/.kube/my_ack_config
kubectl apply -f list-generator.yaml
kubectl delete -f list-generator.yaml
kubectl describe applicationset my-nginx
kubectl get horizontalpodautoscalers.autoscaling
kubectl expose deployment nginx-demo --port=80 --target-port=80 --type=NodePort
kubectl config get-contexts
kubectl config --kubeconfig=$HOME/.kube/tuesday.config use-context tuesday
nohup webbench -c 2000 -t 120 http://10.110.211.156/ &
watch -n1 'kubectl get hpa && kubectl top pod && kubectl get pod'
kubectl exec web-1 -it -- bash
kubectl run busybox --image=busybox --command -- sleep 3600
kubectl exec busybox -it -- sh
kubectl get endpoints
kubectl get pod -w
kubectl get pod -o wide
wget web-1.nginx
wget web-1.nginx.default.svc.cluster.local
route -n
iptables -t nat -L KUBE-SERVICES -n  | column -t
iptables -t nat -L KUBE-NODEPORTS -n  | column -t
iptables -t nat -L KUBE-SVC-QATUYZLPU4I4HE4S -n  | column -t
iptables -t nat -L KUBE-SEP-PFJQYF4RCFOW43YM -n  | column -t
kubectl edit deployments.apps nginx-deployment    # modify v3 to v4
cat /root/curl.log | grep -i "This is version"
