experimental:
  kubernetesGateway:
    # -- Enable traefik experimental GatewayClass CRD
    enabled: true

gatewayClass:  # @schema additionalProperties: false
  # -- When providers.kubernetesGateway.enabled and gateway.enabled, deploy a default gatewayClass
  enabled: true
  # -- Set a custom name to GatewayClass
  name: "traefik"
  # -- Additional gatewayClass labels (e.g. for filtering gateway objects by custom labels)
  labels: {}

# Allow the Gateway to expose HTTPRoute from all namespaces
gateway:
  enabled: true
  namespacePolicy: All

providers:  # @schema additionalProperties: false
  kubernetesIngress:
    enabled: false
  kubernetesGateway:
    # -- Enable Traefik Gateway provider for Gateway API
    enabled: true
    # -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).
    # This option currently enables support for TCPRoute and TLSRoute.
    experimentalChannel: true
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.
    namespaces: []
    # -- A label selector can be defined to filter on specific GatewayClass objects only.
    labelselector: ""
    statusAddress:
      # -- This IP will get copied to the Gateway status.addresses, and currently only supports one IP value (IPv4 or IPv6).
      ip: ""
      # -- This Hostname will get copied to the Gateway status.addresses.
      hostname: ""
      # -- The Kubernetes service to copy status addresses from. When using third parties tools like External-DNS, this option can be used to copy the service loadbalancer.status (containing the service's endpoints IPs) to the gateways. Default to Service of this Chart.
      service:
        name: "{{ (include \"traefik.fullname\" .) }}"
        namespace: "{{ .Release.Namespace }}"
